{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Equipo/source/Tgsc-Proyectos/rrhh-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@modules/contra/services/contra.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@core/auth/auth.service\";\nimport * as i7 from \"@shared/services/bootstrap-notify.service\";\nimport * as i8 from \"../../services/admin.service\";\nimport * as i9 from \"xng-breadcrumb\";\nimport * as i10 from \"@angular/material/expansion\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/form-field\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"@angular/material/select\";\nimport * as i17 from \"@angular/material/core\";\n\nfunction NewmodalidadtrabajoComponent_form_28_div_11_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Seleccione el estado! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewmodalidadtrabajoComponent_form_28_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 24);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function NewmodalidadtrabajoComponent_form_28_div_11_Template_mat_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.estadointtxt = $event;\n    })(\"selectionChange\", function NewmodalidadtrabajoComponent_form_28_div_11_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.chaneestadocel($event);\n    });\n    i0.ɵɵelementStart(5, \"mat-option\", 28);\n    i0.ɵɵtext(6, \"ACTIVO\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-option\", 28);\n    i0.ɵɵtext(8, \"INACTIVO\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, NewmodalidadtrabajoComponent_form_28_div_11_mat_error_9_Template, 2, 0, \"mat-error\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    let tmp_3_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.estadointtxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r1.formularionewtipotrabajador.get(\"stmaneestado\")) == null ? null : tmp_3_0.hasError(\"required\"));\n  }\n}\n\nfunction NewmodalidadtrabajoComponent_form_28_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Es necesario completar el nombre del nuevo trabajador! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewmodalidadtrabajoComponent_form_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function NewmodalidadtrabajoComponent_form_28_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.guardarmodtrabajador();\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" Cancelar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 20);\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"create\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, NewmodalidadtrabajoComponent_form_28_div_11_Template, 10, 4, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 22);\n    i0.ɵɵelementStart(13, \"div\", 23);\n    i0.ɵɵelementStart(14, \"mat-form-field\", 24);\n    i0.ɵɵelementStart(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Nuevo Tipo de Trabajador\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function NewmodalidadtrabajoComponent_form_28_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.newtipotrabajadoratxt = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, NewmodalidadtrabajoComponent_form_28_mat_error_18_Template, 2, 0, \"mat-error\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_5_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formularionewtipotrabajador);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.btnguar, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showestado);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newtipotrabajadoratxt)(\"formControl\", ctx_r0.stamanewtipotrabajador);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx_r0.stamanewtipotrabajador.get(\"stamanewtipotrabajador\")) == null ? null : tmp_5_0.hasError(\"required\"));\n  }\n}\n\n;\nexport class NewmodalidadtrabajoComponent {\n  constructor(contratoService, router, dialog, dialogo, snackBar, _formBuilder, fb, as, activatedRoute, bootstrapNotifyBarService, adminservice) {\n    this.contratoService = contratoService;\n    this.router = router;\n    this.dialog = dialog;\n    this.dialogo = dialogo;\n    this.snackBar = snackBar;\n    this._formBuilder = _formBuilder;\n    this.fb = fb;\n    this.as = as;\n    this.activatedRoute = activatedRoute;\n    this.bootstrapNotifyBarService = bootstrapNotifyBarService;\n    this.adminservice = adminservice;\n    this.matexpansionpanelnewcategoria = false;\n    this.estadoactivo = 3970;\n    this.isLoading = false;\n    this.stmaneestado = new FormControl('');\n    this.stamanewcategoria = new FormControl('');\n    this.stamanewtipotrabajador = new FormControl('');\n    this.showregiscateg = true;\n    this.estadointtxt = true;\n    /*Listar de servicio */\n    //public lstEstadoCel: any = [];\n\n    this.lstEstadonewcatgoria = [];\n    this.titulocategoria = 'NUEVA MODALIDAD DE TRABAJO';\n    this.subtitulo = 'Crear modalidad de trabajo';\n    this.isedit = false;\n    this.btnguar = 'Guardar';\n    this.showestado = true; //console.log('parametro',this.activatedRoute.snapshot.paramMap.get('id'));\n\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.obtenerdatosmaestrodetalle(id);\n      this.isedit = true;\n      this.titulocategoria = 'EDITAR MODALIDAD DE TRABAJO';\n      this.subtitulo = 'Editar modalidad de trabajo';\n      this.btnguar = 'Editar';\n      this.showestado = false;\n    }\n  }\n\n  ngOnInit() {\n    this.datosBasicosFormGroup = this._formBuilder.group({});\n    this.formularionewtipotrabajador = this.fb.group({\n      stmaneestado: this.stmaneestado,\n      stamanewtipotrabajador: this.stamanewtipotrabajador,\n      fkMdEstado: [],\n      stCodigo: [],\n      fkMdEstadoContratacion: [],\n      fkProyecto: [],\n      fxInicio: [],\n      fxFin: []\n    });\n    this.listarestadonewcategoria();\n  }\n\n  obtenerdatosmaestrodetalle(id) {\n    this.adminservice.geteditaradmin(id).subscribe(res => {\n      //console.log('aaa', res);\n      this.newtipotrabajadoratxt = res.stNombre;\n      this.estadointtxt = res.blActivo;\n      this.idMaestroDetalle = res.idMaestroDetalle;\n    });\n  }\n\n  listarestadonewcategoria(id = 31) {\n    this.adminservice.getlistarestadocategoria(id).subscribe(res => {\n      this.lstEstadonewcatgoria = res; // console.log('Estdo-categoria', this.lstEstadonewcatgoria);\n    });\n  }\n\n  chaneestadocel(e) {\n    this.idestdo = e.value; // console.log('id-estado', e.value);\n  }\n\n  guardarmodtrabajador() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.formularionewtipotrabajador.invalid) {\n        _this.formularionewtipotrabajador.markAllAsTouched();\n\n        return;\n      }\n\n      if (_this.isedit) {\n        //console.log('idmaestrodetalle',this.idMaestroDetalle);\n        var dataedit = {\n          idMaestroDetalle: _this.idMaestroDetalle,\n          stNombre: _this.newtipotrabajadoratxt,\n          blActivo: _this.estadointtxt\n        };\n\n        _this.adminservice.putupdatemaestrodetalle(dataedit).subscribe(res => {\n          _this.bootstrapNotifyBarService.notifyWarning('Se Actualizo corresctamente.');\n\n          _this.router.navigate([\"/administracion/modtrabajo\"]);\n        });\n      } else {\n        var data = {\n          fkMaestro: 4,\n          stNombre: _this.newtipotrabajadoratxt,\n          blActivo: _this.estadointtxt\n        };\n\n        _this.adminservice.postguardarmodtrabajador(data).subscribe(res => {\n          _this.bootstrapNotifyBarService.notifyWarning('Se creo correctamente la modalidad de trabajo.');\n\n          _this.router.navigate([\"/administracion/modtrabajo\"]);\n        });\n      }\n    })();\n  }\n\n}\n\nNewmodalidadtrabajoComponent.ɵfac = function NewmodalidadtrabajoComponent_Factory(t) {\n  return new (t || NewmodalidadtrabajoComponent)(i0.ɵɵdirectiveInject(i1.ContraService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i7.BootstrapNotifyBarService), i0.ɵɵdirectiveInject(i8.adminservice));\n};\n\nNewmodalidadtrabajoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewmodalidadtrabajoComponent,\n  selectors: [[\"app-newmodalidadtrabajo\"]],\n  decls: 29,\n  vars: 5,\n  consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"form-group\", \"row\"], [1, \"col-md-12\"], [1, \"form-group-\", \"row\"], [1, \"card\"], [1, \"card-header\", \"card-header-rose\", \"card-header-icon\"], [1, \"row\"], [1, \"col-md-9\"], [1, \"card-icon\"], [1, \"material-icons\"], [1, \"card-title\"], [1, \"col-md-3\"], [1, \"card-body\"], [\"multi\", \"\", 1, \"example-headers-align\"], [3, \"expanded\"], [\"autocomplete\", \"on\", \"class\", \"form-horizontal w-100 p-md-4 p-4\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"autocomplete\", \"on\", 1, \"form-horizontal\", \"w-100\", \"p-md-4\", \"p-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-7\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/administracion/modtrabajo\", 1, \"btn\", \"btn-info\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\"], [\"class\", \"col-md-3\", 4, \"ngIf\"], [1, \"row\", \"mt-3\"], [1, \"col-md-10\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"stamanewtipotrabajador\", \"required\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [4, \"ngIf\"], [\"formControlName\", \"stmaneestado\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\"]],\n  template: function NewmodalidadtrabajoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"xng-breadcrumb\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵelementStart(12, \"i\", 10);\n      i0.ɵɵtext(13, \"person_add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"h4\", 11);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 12);\n      i0.ɵɵelementStart(17, \"h2\", 11);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 13);\n      i0.ɵɵelementStart(20, \"div\", 7);\n      i0.ɵɵelementStart(21, \"div\", 3);\n      i0.ɵɵelementStart(22, \"mat-accordion\", 14);\n      i0.ɵɵelementStart(23, \"mat-expansion-panel\", 15);\n      i0.ɵɵelementStart(24, \"mat-expansion-panel-header\");\n      i0.ɵɵelementStart(25, \"mat-panel-title\");\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"mat-panel-description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, NewmodalidadtrabajoComponent_form_28_Template, 19, 6, \"form\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵtextInterpolate1(\" \", ctx.titulocategoria, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.codsolicitud);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"expanded\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.subtitulo, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showregiscateg);\n    }\n  },\n  directives: [i9.BreadcrumbComponent, i10.MatAccordion, i10.MatExpansionPanel, i10.MatExpansionPanelHeader, i10.MatExpansionPanelTitle, i10.MatExpansionPanelDescription, i11.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i12.MatButton, i2.RouterLink, i13.MatIcon, i14.MatFormField, i14.MatLabel, i15.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.RequiredValidator, i5.FormControlDirective, i16.MatSelect, i17.MatOption, i14.MatError],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\rrhh-web\\src\\app\\modules\\admin\\pages\\newmodalidadtrabajo\\newmodalidadtrabajo.component.ts","C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\rrhh-web\\src\\app\\modules\\admin\\pages\\newmodalidadtrabajo\\newmodalidadtrabajo.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, OnInit,Input } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n//import { ContraService } from '../../services/contra.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ListarSolicitudDto, ListarSolicitudResponse } from '@core/models/TmSolicitud.interface';\r\nimport{ListarbandejaperfilResponse, ListarbandejaperfilDto, ListarbandejacategoriaResponse\r\n} from '@core/models/guardarperfil.interface'\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MaestroDetalle } from '@core/models/MaestroDetalle.interface';\r\nimport { tmProyecto } from '@core/models/Proyecto.interface';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { ContraService } from '@modules/contra/services/contra.service';\r\nimport { BootstrapNotifyBarService } from '@shared/services/bootstrap-notify.service';\r\nimport { DialogNewperfilpuestoComponent } from '@shared/components/dialog-newperfilpuesto/dialog-newperfilpuesto.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DialogObservarperfilComponent } from '@shared/components/dialog-observarperfil/dialog-observarperfil.component';\r\nimport { DialogVerperfilpuestoComponent } from '@shared/components/dialog-verperfilpuesto/dialog-verperfilpuesto.component';\r\nimport { DateSelectionModelChange } from '@angular/material/datepicker';\r\nimport { DialogEditperfilpuestoComponent } from '@shared/components/dialog-editperfilpuesto/dialog-editperfilpuesto.component';\r\nimport { adminservice } from '../../services/admin.service';\r\n\r\ninterface Foodestado {\r\n  value: string;\r\n  viewValue: string;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-newmodalidadtrabajo',\r\n  templateUrl: './newmodalidadtrabajo.component.html',\r\n  styleUrls: []\r\n})\r\nexport class NewmodalidadtrabajoComponent implements OnInit {\r\n\r\n  matexpansionpanelnewcategoria: boolean = false;\r\n  formularionewcategoria!: FormGroup;\r\n  formularionewtipotrabajador!: FormGroup;\r\n  datosBasicosFormGroup!: FormGroup;\r\n  formulario!: FormGroup;\r\n  codsolicitud: string;\r\n  estadoactivo: number =3970;\r\n  isLoading = false;\r\n  stmaneestado = new FormControl('');\r\n  stamanewcategoria = new FormControl('');\r\n  stamanewtipotrabajador = new FormControl('');\r\n  public showregiscateg: boolean = true;\r\n  /*ngmodel */\r\n  public estadoint: number;\r\n  public newcategoriatxt: string;\r\n  public newtipotrabajadoratxt: string;\r\n  public idMaestroDetalle:number;\r\n  public estadointtxt: boolean=true;\r\n\r\n  /* variables id de control combos*/\r\n private idestdo:number;\r\n\r\n /*Listar de servicio */\r\n //public lstEstadoCel: any = [];\r\n public lstEstadonewcatgoria: any = [];\r\n public titulocategoria: string = 'NUEVA MODALIDAD DE TRABAJO';\r\n public subtitulo: string = 'Crear modalidad de trabajo';\r\n public isedit: boolean = false;\r\n public btnguar: string = 'Guardar';\r\n public showestado: boolean = true;\r\n\r\n  constructor(\r\n    private contratoService: ContraService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public dialogo: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private _formBuilder: FormBuilder,\r\n    private fb: FormBuilder,\r\n    public as: AuthService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private bootstrapNotifyBarService: BootstrapNotifyBarService,\r\n    private adminservice : adminservice,\r\n  ) {\r\n    //console.log('parametro',this.activatedRoute.snapshot.paramMap.get('id'));\r\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    if(id != null){\r\n      this.obtenerdatosmaestrodetalle(id);\r\n      this.isedit = true;\r\n      this.titulocategoria ='EDITAR MODALIDAD DE TRABAJO';\r\n      this.subtitulo ='Editar modalidad de trabajo';\r\n      this.btnguar ='Editar';\r\n      this.showestado = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.datosBasicosFormGroup = this._formBuilder.group({\r\n    });\r\n    this.formularionewtipotrabajador = this.fb.group({\r\n      stmaneestado: this.stmaneestado,\r\n      stamanewtipotrabajador: this.stamanewtipotrabajador,\r\n      fkMdEstado: [],\r\n      stCodigo: [],\r\n      fkMdEstadoContratacion: [],\r\n      fkProyecto: [],\r\n      fxInicio: [],\r\n      fxFin: [],\r\n    });\r\n\r\n    this.listarestadonewcategoria();\r\n  }\r\n  obtenerdatosmaestrodetalle(id){\r\n    this.adminservice.geteditaradmin(id).subscribe((res: any) => {\r\n      //console.log('aaa', res);\r\n      this.newtipotrabajadoratxt = res.stNombre;\r\n      this.estadointtxt = res.blActivo;\r\n      this.idMaestroDetalle = res.idMaestroDetalle;\r\n\r\n    });\r\n  }\r\n\r\n  listarestadonewcategoria(id=31){\r\n    this.adminservice.getlistarestadocategoria(id).subscribe((res: any) => {\r\n      this.lstEstadonewcatgoria = res;\r\n     // console.log('Estdo-categoria', this.lstEstadonewcatgoria);\r\n    });\r\n  }\r\n\r\n  chaneestadocel(e: any){\r\n    this.idestdo = e.value;\r\n   // console.log('id-estado', e.value);\r\n  }\r\n\r\n  async guardarmodtrabajador(){\r\n    if (this.formularionewtipotrabajador.invalid) {\r\n      this.formularionewtipotrabajador.markAllAsTouched();\r\n      return;\r\n    }\r\n    if(this.isedit){\r\n      //console.log('idmaestrodetalle',this.idMaestroDetalle);\r\n      var dataedit ={\r\n        idMaestroDetalle: this.idMaestroDetalle,\r\n        stNombre: this.newtipotrabajadoratxt,\r\n        blActivo: this.estadointtxt,\r\n      }\r\n      this.adminservice.putupdatemaestrodetalle(dataedit).subscribe((res:  any) =>{\r\n        this.bootstrapNotifyBarService.notifyWarning('Se Actualizo corresctamente.');\r\n        this.router.navigate([\"/administracion/modtrabajo\"]);\r\n      });\r\n    }else{\r\n      var data = {\r\n        fkMaestro:4,\r\n        stNombre:this.newtipotrabajadoratxt,\r\n        blActivo: this.estadointtxt,\r\n      }\r\n      this.adminservice.postguardarmodtrabajador(data).subscribe((res:  any) =>{\r\n        this.bootstrapNotifyBarService.notifyWarning('Se creo correctamente la modalidad de trabajo.');\r\n        this.router.navigate([\"/administracion/modtrabajo\"]);\r\n\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-12\">\r\n        <xng-breadcrumb></xng-breadcrumb>\r\n      </div>\r\n  </div>\r\n  <div class=\"form-group- row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header card-header-rose card-header-icon\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-9\">\r\n              <div class=\"card-icon\"><i class=\"material-icons\">person_add</i></div>\r\n               <h4 class=\"card-title\">  {{ titulocategoria }}</h4>\r\n             </div>\r\n             <div class=\"col-md-3\">\r\n              <h2 class=\"card-title\">{{ codsolicitud }}</h2>\r\n           </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-accordion class=\"example-headers-align\" multi>\r\n                <mat-expansion-panel [expanded]=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      {{ subtitulo }}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                  </mat-expansion-panel-header>\r\n                  <form autocomplete=\"on\" [formGroup]=\"formularionewtipotrabajador\" *ngIf=\"showregiscateg\" class=\"form-horizontal w-100 p-md-4 p-4\" (ngSubmit)=\"guardarmodtrabajador()\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-7\">\r\n                        <button mat-raised-button class=\"btn btn-info\"  routerLink=\"/administracion/modtrabajo\">\r\n                          <mat-icon>close</mat-icon>\r\n                          Cancelar\r\n                        </button>\r\n                        <button mat-raised-button class=\"btn btn-primary\">\r\n                          <mat-icon>create</mat-icon>\r\n                          {{ btnguar }}\r\n                        </button>\r\n                      </div>\r\n                      <div class=\"col-md-3\" *ngIf=\"showestado\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Estado</mat-label>\r\n                          <mat-select formControlName=\"stmaneestado\"  required [(ngModel)]=\"estadointtxt\" (selectionChange)=\"chaneestadocel($event)\">\r\n                            <!-- <mat-option *ngFor=\"let estado of lstEstadonewcatgoria\" [value]=\"estado.idMaestroDetalle\">\r\n                              {{estado.stNombre}}\r\n                            </mat-option>-->\r\n                            <mat-option [value]=\"true\">ACTIVO</mat-option>\r\n                            <mat-option [value]=\"false\">INACTIVO</mat-option>\r\n\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"formularionewtipotrabajador.get('stmaneestado')?.hasError('required')\">\r\n                            Seleccione el estado!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row mt-3\">\r\n                      <div class=\"col-md-10\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <mat-label>Nuevo Tipo de Trabajador</mat-label>\r\n                          <input matInput [(ngModel)]=\"newtipotrabajadoratxt\"\r\n                          formControlName=\"stamanewtipotrabajador\" [formControl]=\"stamanewtipotrabajador\" required>\r\n                          <mat-error *ngIf=\"stamanewtipotrabajador.get('stamanewtipotrabajador')?.hasError('required')\">\r\n                            Es necesario completar el nombre del nuevo trabajador!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}