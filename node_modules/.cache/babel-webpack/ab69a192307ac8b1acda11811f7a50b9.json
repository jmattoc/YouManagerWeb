{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Equipo/source/Tgsc-Proyectos/youManager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators, FormControl, FormArray } from '@angular/forms';\nimport { DialogoConfirmacionComponent } from '@shared/components/dialogo-confirmacion/dialogo-confirmacion.component';\nimport { asEnumerable } from 'linq-es2015';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/roles.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction FormUsuarioComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email ingresado no es valido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_div_59_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 21);\n    i0.ɵɵlistener(\"change\", function FormUsuarioComponent_div_59_li_2_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const item_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.updateChkbxArray(item_r10, $event.checked, \"ListRoles\");\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", item_r10.disabled)(\"checked\", item_r10.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10.Nombre, \" \");\n  }\n}\n\nfunction FormUsuarioComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"ul\", 18);\n    i0.ɵɵtemplate(2, FormUsuarioComponent_div_59_li_2_Template, 3, 3, \"li\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", group_r8);\n  }\n}\n\nfunction FormUsuarioComponent_mat_error_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Por favor seleccione al menos un rol \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/seguridad/bandusuario\"];\n};\n\nexport class FormUsuarioComponent {\n  constructor(rolesService, dialogo, router, fb) {\n    this.rolesService = rolesService;\n    this.dialogo = dialogo;\n    this.router = router;\n    this.fb = fb;\n    this.onGuardar = new EventEmitter(); //Registro de Expresiones\n\n    this.RegEx_mailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    this.requestUsuario = {\n      id: undefined,\n      login: '',\n      nombre: '',\n      apellidoPaterno: '',\n      apellidoMaterno: '',\n      email: '',\n      listPerfiles: []\n    };\n  }\n\n  guardar() {\n    var _this = this;\n\n    if (this.formulario.invalid) {\n      this.formulario.markAllAsTouched();\n      return;\n    }\n\n    this.dialogo.open(DialogoConfirmacionComponent, {\n      maxWidth: '25vw',\n      maxHeight: 'auto',\n      height: 'auto',\n      width: '25%',\n      disableClose: true,\n      data: {\n        titulo: `Registro de Usuario`,\n        mensaje: `¿Está seguro que desea grabar?`\n      }\n    }).afterClosed().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (confirmado) {\n        if (confirmado) {\n          if (_this.formulario.value.ListRoles !== null) {\n            _this.requestUsuario.listPerfiles = _this.formulario.value.ListRoles.length > 0 ? _this.formulario.value.ListRoles.map(x => {\n              return x.Id;\n            }) : [];\n          }\n\n          _this.requestUsuario.id = _this.formulario.value.id;\n          _this.requestUsuario.login = _this.formulario.value.login;\n          _this.requestUsuario.nombre = _this.formulario.value.nombre;\n          _this.requestUsuario.apellidoPaterno = _this.formulario.value.apellidoPaterno;\n          _this.requestUsuario.apellidoMaterno = _this.formulario.value.apellidoMaterno;\n          _this.requestUsuario.email = _this.formulario.value.email;\n\n          _this.onGuardar.emit(_this.requestUsuario);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  /*\r\n  minSelectedCheckboxes(min = 1) {\r\n    const validator: ValidatorFn = (formArray: AbstractControl) => {\r\n          if (formArray instanceof FormArray) {\r\n        const totalSelected = formArray.controls\r\n          .map((control) => control.value)\r\n          .reduce((prev, next) => (next ? prev + next : prev), 0);\r\n        return totalSelected >= min ? null : { required: true };\r\n      }\r\n          throw new Error('formArray is not an instance of FormArray');\r\n    };\r\n    return validator;\r\n  }*/\n\n\n  setCheboxes(listCargados, listSeleccionado, key) {\n    const controls = this.formulario.get(key);\n    let arraSeleccionado = listSeleccionado.split(\",\");\n\n    for (let index = 0; index < arraSeleccionado.length; index++) {\n      for (let index1 = 0; index1 < listCargados.length; index1++) {\n        if (parseInt(arraSeleccionado[index]) == listCargados[index1].Id) {\n          listCargados[index1].completed = true;\n          controls.push(new FormControl({\n            Id: arraSeleccionado[index]\n          })); //controls[index1].setValue(true);\n        }\n      }\n    }\n  }\n\n  updateChkbxArray(chk, isChecked, key) {\n    const chkArray = this.formulario.get(key);\n\n    if (isChecked) {\n      //sometimes inserts values already included creating double records for the same values -hence the defence\n      if (chkArray.controls.findIndex(x => x.value == chk.Id) == -1) chkArray.push(new FormControl({\n        Id: chk.Id,\n        Nombre: chk.Nombre\n      }));\n    } else {\n      let idx = chkArray.controls.findIndex(x => x.value == chk.Id);\n      chkArray.removeAt(idx);\n    }\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      _this2.listarRolesDto = yield _this2.rolesService.listarRol();\n      _this2.listarRolesDto = _this2.listarRolesDto.map(x => {\n        return {\n          Id: x.Id,\n          Nombre: x.Nombre\n        };\n      });\n\n      if (_this2.listarRolesDto.length > 0) {\n        _this2.listarRolesDto.forEach(x => {\n          x.disabled = false;\n          x.completed = false;\n        });\n      }\n\n      _this2.groupsRoles = asEnumerable(_this2.listarRolesDto).Select((option, index) => {\n        return {\n          option,\n          index\n        };\n      }).GroupBy(x => Math.floor(x.index / 3), x => x.option, (key, options) => asEnumerable(options).ToArray()).ToArray();\n      _this2.controlsRoles = [];\n      _this2.formulario = _this2.fb.group({\n        id: new FormControl(0),\n        codigo: new FormControl(''),\n        login: new FormControl('', [Validators.required]),\n        nombre: new FormControl('', [Validators.required]),\n        apellidoPaterno: new FormControl('', [Validators.required]),\n        apellidoMaterno: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required, Validators.pattern(_this2.RegEx_mailPattern)]),\n        ListRoles: new FormArray(_this2.controlsRoles, [Validators.required])\n      });\n\n      if (_this2.usuario) {\n        var IdsRoles = ((_a = _this2.usuario) === null || _a === void 0 ? void 0 : _a.listPerfiles.length) > 0 ? (_b = _this2.usuario) === null || _b === void 0 ? void 0 : _b.listPerfiles.map(x => {\n          return x.id;\n        }).join(\"\") : \"\";\n        (_c = _this2.usuario) === null || _c === void 0 ? void 0 : _c.listPerfiles.map(x => {\n          return x.Id;\n        }).join(\"\");\n        if (IdsRoles.length > 0) _this2.setCheboxes(_this2.listarRolesDto, IdsRoles, \"ListRoles\");\n\n        _this2.formulario.patchValue({\n          id: _this2.usuario.id,\n          login: _this2.usuario.login,\n          nombre: _this2.usuario.nombre,\n          apellidoPaterno: _this2.usuario.apellidoPaterno,\n          apellidoMaterno: _this2.usuario.apellidoMaterno,\n          email: _this2.usuario.correo,\n          codigo: _this2.usuario.codigo\n        });\n\n        _this2.formulario.controls.codigo.disable();\n      }\n    })();\n  }\n\n}\n\nFormUsuarioComponent.ɵfac = function FormUsuarioComponent_Factory(t) {\n  return new (t || FormUsuarioComponent)(i0.ɵɵdirectiveInject(i1.RolesService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\n\nFormUsuarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormUsuarioComponent,\n  selectors: [[\"app-form-usuario-page\"]],\n  inputs: {\n    usuario: \"usuario\"\n  },\n  outputs: {\n    onGuardar: \"onGuardar\"\n  },\n  decls: 61,\n  vars: 11,\n  consts: [[\"autocomplete\", \"on\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\"], [\"mat-raised-button\", \"\", 1, \"btn\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-info\", 3, \"routerLink\"], [1, \"form-group\", \"border\", \"p-3\"], [1, \"w-auto\", \"px-2\"], [1, \"col-md-6\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"codigo\"], [\"matInput\", \"\", \"formControlName\", \"login\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"nombre\"], [\"matInput\", \"\", \"formControlName\", \"apellidoPaterno\"], [\"matInput\", \"\", \"formControlName\", \"apellidoMaterno\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [1, \"col-md-8\"], [\"class\", \"col-md-6\", 4, \"ngFor\", \"ngForOf\"], [2, \"list-style-type\", \"none\"], [\"formArrayName\", \"ListRoles\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"ListRoles\"], [\"color\", \"primary\", \"value\", \"item.Id\", 3, \"disabled\", \"checked\", \"change\"]],\n  template: function FormUsuarioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FormUsuarioComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.guardar();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4, \" Guardar \");\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6, \"save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 4);\n      i0.ɵɵtext(8, \" Cancelar \");\n      i0.ɵɵelementStart(9, \"mat-icon\");\n      i0.ɵɵtext(10, \"block\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"fieldset\", 5);\n      i0.ɵɵelementStart(12, \"legend\", 6);\n      i0.ɵɵtext(13, \"DATOS GENERALES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 1);\n      i0.ɵɵelementStart(15, \"div\", 7);\n      i0.ɵɵelementStart(16, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Codigo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 7);\n      i0.ɵɵelementStart(21, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 10);\n      i0.ɵɵtemplate(25, FormUsuarioComponent_mat_error_25_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 1);\n      i0.ɵɵelementStart(27, \"div\", 7);\n      i0.ɵɵelementStart(28, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 12);\n      i0.ɵɵtemplate(32, FormUsuarioComponent_mat_error_32_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 7);\n      i0.ɵɵelementStart(34, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(35, \"mat-label\");\n      i0.ɵɵtext(36, \"Apellido Paterno\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 13);\n      i0.ɵɵtemplate(38, FormUsuarioComponent_mat_error_38_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 1);\n      i0.ɵɵelementStart(40, \"div\", 7);\n      i0.ɵɵelementStart(41, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(42, \"mat-label\");\n      i0.ɵɵtext(43, \"Apellido Materno\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 14);\n      i0.ɵɵtemplate(45, FormUsuarioComponent_mat_error_45_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 7);\n      i0.ɵɵelementStart(47, \"mat-form-field\", 8);\n      i0.ɵɵelementStart(48, \"mat-label\");\n      i0.ɵɵtext(49, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 15);\n      i0.ɵɵtemplate(51, FormUsuarioComponent_mat_error_51_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵtemplate(52, FormUsuarioComponent_mat_error_52_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"fieldset\", 5);\n      i0.ɵɵelementStart(54, \"legend\", 6);\n      i0.ɵɵtext(55, \"ROLES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 1);\n      i0.ɵɵelementStart(57, \"div\", 16);\n      i0.ɵɵelementStart(58, \"div\", 1);\n      i0.ɵɵtemplate(59, FormUsuarioComponent_div_59_Template, 3, 1, \"div\", 17);\n      i0.ɵɵtemplate(60, FormUsuarioComponent_mat_error_60_Template, 2, 0, \"mat-error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls[\"login\"].hasError(\"required\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls[\"nombre\"].hasError(\"required\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls[\"apellidoPaterno\"].hasError(\"required\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls[\"apellidoMaterno\"].hasError(\"required\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls[\"email\"].hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.get(\"email\").hasError(\"pattern\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groupsRoles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario.controls.ListRoles.invalid);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\seguridad\\pages\\usuario\\form-usuario-page\\form-usuario-page.component.ts","C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\seguridad\\pages\\usuario\\form-usuario-page\\form-usuario-page.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, Inject } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { UsuarioDto } from '@core/models/seguridad/UsuarioDto';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogoConfirmacionComponent } from '@shared/components/dialogo-confirmacion/dialogo-confirmacion.component';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { asEnumerable } from 'linq-es2015';\r\n@Component({\r\n  selector: 'app-form-usuario-page',\r\n  templateUrl: './form-usuario-page.component.html',\r\n\r\n})\r\nexport class FormUsuarioComponent implements OnInit {\r\n  @Input() usuario: any;\r\n  @Output() onGuardar: EventEmitter<UsuarioDto> = new EventEmitter();\r\n\r\n  groupsRoles: any;\r\n  controlsRoles: any;\r\n  listarRolesDto: any[];\r\n\r\n  formulario: FormGroup;\r\n  //Registro de Expresiones\r\n  RegEx_mailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  requestUsuario: UsuarioDto = {\r\n    id: undefined,\r\n    login: '',\r\n    nombre: '',\r\n    apellidoPaterno: '',\r\n    apellidoMaterno: '',\r\n    email: '',\r\n    listPerfiles: []\r\n  };\r\n  constructor(\r\n    private rolesService: RolesService,\r\n    public dialogo: MatDialog,\r\n    public router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n  }\r\n\r\n  guardar() {\r\n\r\n    if (this.formulario.invalid) {\r\n      this.formulario.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.dialogo.open(DialogoConfirmacionComponent, {\r\n      maxWidth: '25vw',\r\n      maxHeight: 'auto',\r\n      height: 'auto',\r\n      width: '25%',\r\n      disableClose: true,\r\n      data: {\r\n        titulo: `Registro de Usuario`,\r\n        mensaje: `¿Está seguro que desea grabar?`\r\n      }\r\n    })\r\n      .afterClosed()\r\n      .subscribe(async (confirmado: Boolean) => {\r\n        if (confirmado) {\r\n          if (this.formulario.value.ListRoles !== null) {\r\n            this.requestUsuario.listPerfiles = this.formulario.value.ListRoles.length > 0 ? this.formulario.value.ListRoles.map(x => { return x.Id }) : [];\r\n          }\r\n          this.requestUsuario.id = this.formulario.value.id;\r\n          this.requestUsuario.login = this.formulario.value.login;\r\n          this.requestUsuario.nombre = this.formulario.value.nombre;\r\n          this.requestUsuario.apellidoPaterno = this.formulario.value.apellidoPaterno;\r\n          this.requestUsuario.apellidoMaterno = this.formulario.value.apellidoMaterno;\r\n          this.requestUsuario.email = this.formulario.value.email;\r\n          this.onGuardar.emit(this.requestUsuario);\r\n        }\r\n      });\r\n  }\r\n  /*\r\n  minSelectedCheckboxes(min = 1) {\r\n    const validator: ValidatorFn = (formArray: AbstractControl) => {\r\n\r\n      if (formArray instanceof FormArray) {\r\n        const totalSelected = formArray.controls\r\n          .map((control) => control.value)\r\n          .reduce((prev, next) => (next ? prev + next : prev), 0);\r\n        return totalSelected >= min ? null : { required: true };\r\n      }\r\n\r\n      throw new Error('formArray is not an instance of FormArray');\r\n    };\r\n    return validator;\r\n  }*/\r\n  setCheboxes(listCargados: any, listSeleccionado: String, key: string) {\r\n    \r\n    const controls = <FormArray>this.formulario.get(key);\r\n    let arraSeleccionado: any[] = listSeleccionado.split(\",\");\r\n    for (let index = 0; index < arraSeleccionado.length; index++) {\r\n      for (let index1 = 0; index1 < listCargados.length; index1++) {\r\n        if (parseInt(arraSeleccionado[index]) == listCargados[index1].Id) {\r\n          listCargados[index1].completed = true;\r\n          controls.push(new FormControl({ Id: arraSeleccionado[index] }));\r\n          //controls[index1].setValue(true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  updateChkbxArray(chk, isChecked, key) {\r\n\r\n    const chkArray = <FormArray>this.formulario.get(key);\r\n    if (isChecked) {\r\n      //sometimes inserts values already included creating double records for the same values -hence the defence\r\n      if (chkArray.controls.findIndex(x => x.value == chk.Id) == -1)\r\n        chkArray.push(new FormControl({ Id: chk.Id, Nombre: chk.Nombre }));\r\n    } else {\r\n      let idx = chkArray.controls.findIndex(x => x.value == chk.Id);\r\n      chkArray.removeAt(idx);\r\n    }\r\n  }\r\n  async ngOnInit() {\r\n\r\n    this.listarRolesDto = await this.rolesService.listarRol();\r\n\r\n    this.listarRolesDto = this.listarRolesDto.map(x => { return { Id: x.Id, Nombre: x.Nombre } });\r\n    if (this.listarRolesDto.length > 0) {\r\n      this.listarRolesDto.forEach((x) => {\r\n        x.disabled = false;\r\n        x.completed = false;\r\n      });\r\n    }\r\n\r\n    this.groupsRoles = asEnumerable(this.listarRolesDto)\r\n      .Select((option, index) => { return { option, index }; })\r\n      .GroupBy(\r\n        x => Math.floor(x.index / 3),\r\n        x => x.option,\r\n        (key, options) => asEnumerable(options).ToArray()\r\n      )\r\n      .ToArray();\r\n    \r\n\r\n    this.controlsRoles = [];\r\n\r\n    this.formulario = this.fb.group({\r\n      id: new FormControl(0),\r\n      codigo: new FormControl(''),\r\n      login: new FormControl('', [Validators.required]),\r\n      nombre: new FormControl('', [Validators.required]),\r\n      apellidoPaterno: new FormControl('', [Validators.required]),\r\n      apellidoMaterno: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.pattern(this.RegEx_mailPattern)]),\r\n      ListRoles: new FormArray(this.controlsRoles, [Validators.required]),\r\n    });\r\n    if (this.usuario) {\r\n      \r\n      var IdsRoles = this.usuario?.listPerfiles.length > 0 ? this.usuario?.listPerfiles.map(x => { return x.id }).join(\"\") : \"\";\r\n      this.usuario?.listPerfiles.map(x => { return x.Id }).join(\"\")\r\n      \r\n      if (IdsRoles.length > 0)\r\n        this.setCheboxes(this.listarRolesDto, IdsRoles, \"ListRoles\");\r\n      this.formulario.patchValue({\r\n        id: this.usuario.id,\r\n        login: this.usuario.login,\r\n        nombre: this.usuario.nombre,\r\n        apellidoPaterno: this.usuario.apellidoPaterno,\r\n        apellidoMaterno: this.usuario.apellidoMaterno,\r\n        email: this.usuario.correo,\r\n        codigo: this.usuario.codigo\r\n      });\r\n      this.formulario.controls.codigo.disable();\r\n    }\r\n  }\r\n}\r\n\r\n","<form autocomplete=\"on\" [formGroup]=\"formulario\" (ngSubmit)=\"guardar()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <button mat-raised-button class=\"btn\">\r\n                Guardar\r\n                <mat-icon>save</mat-icon>\r\n            </button>\r\n            <a class=\"btn btn-info\" mat-raised-button [routerLink]=\"['/seguridad/bandusuario']\">\r\n                Cancelar\r\n                <mat-icon>block</mat-icon>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <fieldset class=\"form-group border p-3\">\r\n        <legend class=\"w-auto px-2\">DATOS GENERALES</legend>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Codigo</mat-label>\r\n                    <input matInput formControlName=\"codigo\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Login</mat-label>\r\n                    <input matInput formControlName=\"login\">\r\n                    <mat-error *ngIf=\"formulario.controls['login'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Nombre</mat-label>\r\n                    <input matInput formControlName=\"nombre\">\r\n                    <mat-error *ngIf=\"formulario.controls['nombre'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Apellido Paterno</mat-label>\r\n                    <input matInput formControlName=\"apellidoPaterno\">\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoPaterno'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Apellido Materno</mat-label>\r\n                    <input matInput formControlName=\"apellidoMaterno\">\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoMaterno'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\">\r\n                    <mat-error *ngIf=\"formulario.controls['email'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.get('email').hasError('pattern')\">\r\n                        Email ingresado no es valido\r\n                    </mat-error>\r\n\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"form-group border p-3\">\r\n        <legend class=\"w-auto px-2\">ROLES</legend>\r\n        <div class=\"row\">\r\n          \r\n            <div class=\"col-md-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\" *ngFor=\"let group of groupsRoles\">\r\n                        <ul style=\" list-style-type: none;\">\r\n                            <li *ngFor=\"let item of group\" formArrayName=\"ListRoles\">\r\n                                <mat-checkbox color=\"primary\" \r\n                                    [disabled]=\"item.disabled\"\r\n                                    [checked]=\"item.completed\"\r\n                                    (change)=\"updateChkbxArray(item, $event.checked, 'ListRoles')\"\r\n                                    value=\"item.Id\">\r\n                                    {{item.Nombre}}\r\n                                </mat-checkbox>\r\n                            </li>\r\n                        </ul>                       \r\n                    </div>\r\n                    <mat-error *ngIf=\"formulario.controls.ListRoles.invalid\">\r\n                        Por favor seleccione al menos un rol\r\n                    </mat-error>                   \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}