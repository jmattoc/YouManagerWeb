{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Equipo/source/Tgsc-Proyectos/youManager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { DialogoConfirmacionComponent } from '@shared/components/dialogo-confirmacion/dialogo-confirmacion.component';\nimport { asEnumerable } from 'linq-es2015';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/roles.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/checkbox\";\n\nfunction FormUsuarioComponent_form_0_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 3 caracteres como m\\u00EDnimo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 50 caracteres como m\\u00E1ximo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 3 caracteres como m\\u00EDnimo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 50 caracteres como m\\u00E1ximo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 3 caracteres como m\\u00EDnimo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 50 caracteres como m\\u00E1ximo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email ingresado no es valido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 3 caracteres como m\\u00EDnimo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 100 caracteres como m\\u00E1ximo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 3 caracteres como m\\u00EDnimo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo debe contener 20 caracteres como m\\u00E1ximo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormUsuarioComponent_form_0_div_65_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 22);\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 23);\n    i0.ɵɵlistener(\"change\", function FormUsuarioComponent_form_0_div_65_li_2_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const item_r21 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return ctx_r22.updateChkbxArray(item_r21, $event.checked, \"ListRoles\");\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", false)(\"checked\", item_r21.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r21.Nombre, \" \");\n  }\n}\n\nfunction FormUsuarioComponent_form_0_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"ul\", 20);\n    i0.ɵɵtemplate(2, FormUsuarioComponent_form_0_div_65_li_2_Template, 3, 3, \"li\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r19 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", group_r19);\n  }\n}\n\nfunction FormUsuarioComponent_form_0_mat_error_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Por favor seleccione al menos un rol \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/seguridad/bandusuario\"];\n};\n\nfunction FormUsuarioComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function FormUsuarioComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.guardar();\n    });\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵtext(4, \"Guardar\");\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 5);\n    i0.ɵɵtext(8, \"Cancelar\");\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"block\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"fieldset\", 6);\n    i0.ɵɵelementStart(12, \"legend\", 7);\n    i0.ɵɵtext(13, \"DATOS GENERALES\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 2);\n    i0.ɵɵelementStart(15, \"div\", 8);\n    i0.ɵɵelementStart(16, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(17, \"mat-label\");\n    i0.ɵɵtext(18, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 10);\n    i0.ɵɵtemplate(20, FormUsuarioComponent_form_0_mat_error_20_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(21, FormUsuarioComponent_form_0_mat_error_21_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(22, FormUsuarioComponent_form_0_mat_error_22_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 8);\n    i0.ɵɵelementStart(24, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(25, \"mat-label\");\n    i0.ɵɵtext(26, \"Apellido Paterno\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 12);\n    i0.ɵɵtemplate(28, FormUsuarioComponent_form_0_mat_error_28_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(29, FormUsuarioComponent_form_0_mat_error_29_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(30, FormUsuarioComponent_form_0_mat_error_30_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 8);\n    i0.ɵɵelementStart(32, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(33, \"mat-label\");\n    i0.ɵɵtext(34, \"Apellido Materno\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"input\", 13);\n    i0.ɵɵtemplate(36, FormUsuarioComponent_form_0_mat_error_36_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(37, FormUsuarioComponent_form_0_mat_error_37_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(38, FormUsuarioComponent_form_0_mat_error_38_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 8);\n    i0.ɵɵelementStart(40, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(41, \"mat-label\");\n    i0.ɵɵtext(42, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(43, \"input\", 14);\n    i0.ɵɵtemplate(44, FormUsuarioComponent_form_0_mat_error_44_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(45, FormUsuarioComponent_form_0_mat_error_45_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(46, FormUsuarioComponent_form_0_mat_error_46_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(47, FormUsuarioComponent_form_0_mat_error_47_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"div\", 8);\n    i0.ɵɵelementStart(49, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(50, \"mat-label\");\n    i0.ɵɵtext(51, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"input\", 15);\n    i0.ɵɵtemplate(53, FormUsuarioComponent_form_0_mat_error_53_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(54, FormUsuarioComponent_form_0_mat_error_54_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(55, FormUsuarioComponent_form_0_mat_error_55_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"div\", 8);\n    i0.ɵɵelementStart(57, \"mat-checkbox\", 16);\n    i0.ɵɵtext(58, \"Recibir notificacion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"fieldset\", 6);\n    i0.ɵɵelementStart(60, \"legend\", 7);\n    i0.ɵɵtext(61, \"ROLES\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"div\", 2);\n    i0.ɵɵelementStart(63, \"div\", 17);\n    i0.ɵɵelementStart(64, \"div\", 2);\n    i0.ɵɵtemplate(65, FormUsuarioComponent_form_0_div_65_Template, 3, 1, \"div\", 18);\n    i0.ɵɵtemplate(66, FormUsuarioComponent_form_0_mat_error_66_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(20, _c0));\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"Nombre\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"Nombre\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"Nombre\"].hasError(\"maxlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoPaterno\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoPaterno\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoPaterno\"].hasError(\"maxlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoMaterno\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoMaterno\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"apellidoMaterno\"].hasError(\"maxlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"email\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.get(\"email\").hasError(\"pattern\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"email\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"email\"].hasError(\"maxlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"login\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"login\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls[\"login\"].hasError(\"maxlength\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.groupsRoles);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formulario.controls.ListRoles.invalid);\n  }\n}\n\nexport class FormUsuarioComponent {\n  constructor(rolesService, dialogo, router, fb) {\n    this.rolesService = rolesService;\n    this.dialogo = dialogo;\n    this.router = router;\n    this.fb = fb;\n    this.onGuardar = new EventEmitter(); //Registro de Expresiones\n\n    this.RegEx_mailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    this.requestUsuario = {\n      id: undefined,\n      login: '',\n      nombre: '',\n      apellidoPaterno: '',\n      apellidoMaterno: '',\n      email: '',\n      listPerfiles: []\n    };\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let lstRoles = yield _this.rolesService.listarRoles({\n        idAplicacion: localStorage.getItem(\"App\")\n      }).toPromise();\n      lstRoles = lstRoles.map(x => {\n        return {\n          Id: x.Id,\n          Nombre: x.Nombre,\n          completed: false\n        };\n      });\n      _this.groupsRoles = asEnumerable(lstRoles).Select((option, index) => {\n        return {\n          option,\n          index\n        };\n      }).GroupBy(x => Math.floor(x.index / 3), x => x.option, (key, options) => asEnumerable(options).ToArray()).ToArray();\n      _this.controlsRoles = [];\n\n      if (_this.objRegistro) {\n        //EsEdicion   \n        // if (this.listarRolesDto.length > 0) {\n        //   this.listarRolesDto.forEach((x) => {\n        //     x.disabled = true;\n        //   });\n        // }\n        // this.controlsRoles = this.objRegistro?.listPerfiles;\n        // var controlsAsignacionesRoles: any = this.listarRolesDto.map(c => new FormControl(false));\n        // this.setCheboxes(this.listarRolesDto, this.objRegistro?.listPerfiles, controlsAsignacionesRoles);\n        // this.controlsRoles = this.objRegistro?.listPerfiles;\n        // var controlsAsignacionesRoles: any = lstRoles.map(c => new FormControl(false));\n        // this.setCheboxes(lstRoles, this.objRegistro?.listPerfiles, controlsAsignacionesRoles);\n        _this.formulario = _this.fb.group({\n          id: [{\n            value: _this.objRegistro.id\n          }, []],\n          login: [{\n            value: _this.objRegistro.login,\n            disabled: true\n          }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n          Nombre: [{\n            value: _this.objRegistro.nombre,\n            disabled: false\n          }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n          apellidoPaterno: [{\n            value: _this.objRegistro.apellidoPaterno,\n            disabled: false\n          }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n          apellidoMaterno: [{\n            value: _this.objRegistro.apellidoMaterno,\n            disabled: false\n          }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n          email: [{\n            value: _this.objRegistro.correo,\n            disabled: false\n          }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n          ListRoles: _this.fb.array(controlsAsignacionesRoles, [Validators.required]),\n          recibeNotificacion: [{\n            value: _this.objRegistro.recibeNotificacion,\n            disabled: false\n          }, []]\n        }); // var IdsRoles = this.objRegistro?.listPerfiles.length > 0 ? this.objRegistro?.listPerfiles.map(x => { return x.id }).join(\"\") : \"\";            \n        // this.objRegistro?.listPerfiles.map(x => { return x.Id }).join(\"\")            \n        // if (IdsRoles.length > 0)\n        // this.setCheboxes(lstRoles, this.objRegistro?.listPerfiles, this.formulario.value.ListRoles);\n      } else {\n        _this.formulario = new FormGroup({\n          id: new FormControl(0),\n          login: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\n          Nombre: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\n          apellidoPaterno: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\n          apellidoMaterno: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\n          email: new FormControl('', [Validators.required, Validators.pattern(_this.RegEx_mailPattern), Validators.minLength(3), Validators.maxLength(100)]),\n          ListRoles: new FormArray([], [Validators.required]),\n          recibeNotificacion: new FormControl(false, [])\n        });\n      } // this.controlsRoles = [];\n      // this.formulario = this.fb.group({\n      //   id: new FormControl(0),      \n      //   login: new FormControl('', [Validators.required]),\n      //   nombre: new FormControl('', [Validators.required]),\n      //   apellidoPaterno: new FormControl('', [Validators.required]),\n      //   apellidoMaterno: new FormControl('', [Validators.required]),\n      //   email: new FormControl('', [Validators.required, Validators.pattern(this.RegEx_mailPattern)]),\n      //   ListRoles: new FormArray(this.controlsRoles, [Validators.required]),\n      // });\n      // if (this.objRegistro) {\n      //   var IdsRoles = this.objRegistro?.listPerfiles.length > 0 ? this.objRegistro?.listPerfiles.map(x => { return x.id }).join(\"\") : \"\";\n      //   this.objRegistro?.listPerfiles.map(x => { return x.Id }).join(\"\")\n      //   if (IdsRoles.length > 0)\n      //     this.setCheboxes(this.listarRolesDto, IdsRoles, \"ListRoles\");\n      //   this.formulario.patchValue({\n      //     id: this.objRegistro.id,\n      //     login: this.objRegistro.login,\n      //     nombre: this.objRegistro.nombre,\n      //     apellidoPaterno: this.objRegistro.apellidoPaterno,\n      //     apellidoMaterno: this.objRegistro.apellidoMaterno,\n      //     email: this.objRegistro.correo,\n      //   });\n      // }\n\n    })();\n  }\n\n  guardar() {\n    var _this2 = this;\n\n    if (this.formulario.invalid) {\n      this.formulario.markAllAsTouched();\n      return;\n    }\n\n    this.dialogo.open(DialogoConfirmacionComponent, {\n      maxWidth: '25vw',\n      maxHeight: 'auto',\n      height: 'auto',\n      width: '25%',\n      disableClose: true,\n      data: {\n        titulo: `Registro de Usuario`,\n        mensaje: `¿Está seguro que desea grabar?`\n      }\n    }).afterClosed().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (Ok) {\n        if (Ok) {\n          let request = {\n            Id: _this2.objRegistro ? _this2.objRegistro.Id : 0,\n            login: _this2.formulario.value.login,\n            Nombre: _this2.formulario.value.Nombre,\n            apellidoPaterno: _this2.formulario.value.apellidoPaterno,\n            apellidoMaterno: _this2.formulario.value.apellidoMaterno,\n            email: _this2.formulario.value.email,\n            recibeNotificacion: _this2.formulario.value.recibeNotificacion,\n            IdAplicacion: parseInt(localStorage.getItem(\"App\"))\n          };\n          console.log(_this2.formulario.value.ListRoles);\n          if (_this2.formulario.value.ListRoles !== null) request.listPerfiles = _this2.formulario.value.ListRoles.length > 0 ? _this2.formulario.value.ListRoles.map(x => {\n            return x.Id;\n          }) : []; // this.onGuardar.emit(request);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  /*\r\n  minSelectedCheckboxes(min = 1) {\r\n    const validator: ValidatorFn = (formArray: AbstractControl) => {\r\n          if (formArray instanceof FormArray) {\r\n        const totalSelected = formArray.controls\r\n          .map((control) => control.value)\r\n          .reduce((prev, next) => (next ? prev + next : prev), 0);\r\n        return totalSelected >= min ? null : { required: true };\r\n      }\r\n          throw new Error('formArray is not an instance of FormArray');\r\n    };\r\n    return validator;\r\n  }*/\n  // setCheboxes(listCargados: any, listSeleccionado: String, key: string) {    \n  //   const controls = <FormArray>this.formulario.get(key);    \n  //   let arraSeleccionado: any[] = listSeleccionado.split(\",\");\n  //   for (let index = 0; index < arraSeleccionado.length; index++) {\n  //     for (let index1 = 0; index1 < listCargados.length; index1++) {\n  //       //console.log(listCargados[index1].Id);\n  //       if (parseInt(arraSeleccionado[index]) == listCargados[index1].Id) {\n  //         listCargados[index1].completed = true;\n  //         controls.push(new FormControl({ Id: arraSeleccionado[index] }));\n  //         //controls.push(new FormControl({ Id: arraSeleccionado[index] }));\n  //         //controls[index1].setValue(true);\n  //       }\n  //     }\n  //   }\n  // }\n\n\n  setCheboxes(listCargados, arraSeleccionado, controls) {\n    for (let index = 0; index < arraSeleccionado.length; index++) {\n      for (let index1 = 0; index1 < listCargados.length; index1++) {\n        if (parseInt(arraSeleccionado[index].id) == listCargados[index1].Id) {\n          listCargados[index1].completed = true; // controls[index1].setValue(new FormControl({ Id: arraSeleccionado[index].id, Nombre: arraSeleccionado[index].Nombre }));\n\n          controls[index1].setValue(true);\n        }\n      }\n    }\n  }\n\n  updateChkbxArray(chk, isChecked, key) {\n    const chkArray = this.formulario.get(key);\n\n    if (isChecked) {\n      //sometimes inserts values already included creating double records for the same values -hence the defence      \n      if (chkArray.controls.findIndex(x => x.value == chk.Id) == -1) chkArray.push(new FormControl({\n        Id: chk.Id,\n        Nombre: chk.Nombre\n      }));\n    } else {\n      let idx = chkArray.controls.findIndex(x => x.value == chk.Id);\n      chkArray.removeAt(idx);\n    }\n  }\n\n}\n\nFormUsuarioComponent.ɵfac = function FormUsuarioComponent_Factory(t) {\n  return new (t || FormUsuarioComponent)(i0.ɵɵdirectiveInject(i1.RolesService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\n\nFormUsuarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormUsuarioComponent,\n  selectors: [[\"app-form-usuario-page\"]],\n  inputs: {\n    objRegistro: \"objRegistro\"\n  },\n  outputs: {\n    onGuardar: \"onGuardar\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"autocomplete\", \"on\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"autocomplete\", \"on\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\"], [\"mat-raised-button\", \"\", 1, \"btn\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-info\", 3, \"routerLink\"], [1, \"form-group\", \"border\", \"p-3\"], [1, \"w-auto\", \"px-2\"], [1, \"col-md-2\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"Nombre\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"apellidoPaterno\"], [\"matInput\", \"\", \"formControlName\", \"apellidoMaterno\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"formControlName\", \"login\"], [\"formControlName\", \"recibeNotificacion\"], [1, \"col-md-8\"], [\"class\", \"col-md-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\"], [2, \"list-style-type\", \"none\"], [\"formArrayName\", \"ListRoles\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"ListRoles\"], [\"color\", \"primary\", \"value\", \"item.Id\", 3, \"disabled\", \"checked\", \"change\"]],\n  template: function FormUsuarioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormUsuarioComponent_form_0_Template, 67, 21, \"form\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.formulario);\n    }\n  },\n  directives: [i5.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i6.MatButton, i7.MatIcon, i6.MatAnchor, i3.RouterLinkWithHref, i8.MatFormField, i8.MatLabel, i9.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i10.MatCheckbox, i5.NgForOf, i8.MatError, i4.FormArrayName],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\seguridad\\pages\\usuario\\form-usuario-page\\form-usuario-page.component.ts","C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\seguridad\\pages\\usuario\\form-usuario-page\\form-usuario-page.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, Inject } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { UsuarioDto } from '@core/models/seguridad/UsuarioDto';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogoConfirmacionComponent } from '@shared/components/dialogo-confirmacion/dialogo-confirmacion.component';\r\nimport { RolesService } from '../../../services/roles.service';\r\nimport { asEnumerable } from 'linq-es2015';\r\n@Component({\r\n  selector: 'app-form-usuario-page',\r\n  templateUrl: './form-usuario-page.component.html',\r\n\r\n})\r\nexport class FormUsuarioComponent implements OnInit {\r\n  @Input() objRegistro: any;\r\n  @Output() onGuardar: EventEmitter<any> = new EventEmitter();  \r\n  formulario: FormGroup;\r\n\r\n  groupsRoles: any[];\r\n  controlsRoles: any;\r\n  \r\n  \r\n  //Registro de Expresiones\r\n  RegEx_mailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  requestUsuario: UsuarioDto = {\r\n    id: undefined,\r\n    login: '',\r\n    nombre: '',\r\n    apellidoPaterno: '',\r\n    apellidoMaterno: '',\r\n    email: '',\r\n    listPerfiles: []\r\n  };\r\n  constructor(\r\n    private rolesService: RolesService,\r\n    public dialogo: MatDialog,\r\n    public router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n  }\r\n  async ngOnInit() {\r\n\r\n    let lstRoles = await this.rolesService.listarRoles({idAplicacion: localStorage.getItem(\"App\")}).toPromise();\r\n    lstRoles = lstRoles.map(x => { return { Id: x.Id, Nombre: x.Nombre, completed:false } });    \r\n    this.groupsRoles = asEnumerable(lstRoles).Select((option, index) => { return { option, index }; }).GroupBy(  x => Math.floor(x.index / 3),x => x.option,(key, options) => asEnumerable(options).ToArray()).ToArray();      \r\n    this.controlsRoles = [];\r\n\r\n        if(this.objRegistro){ //EsEdicion   \r\n          // if (this.listarRolesDto.length > 0) {\r\n          //   this.listarRolesDto.forEach((x) => {\r\n          //     x.disabled = true;\r\n          //   });\r\n          // }\r\n          // this.controlsRoles = this.objRegistro?.listPerfiles;\r\n          // var controlsAsignacionesRoles: any = this.listarRolesDto.map(c => new FormControl(false));\r\n          // this.setCheboxes(this.listarRolesDto, this.objRegistro?.listPerfiles, controlsAsignacionesRoles);\r\n          // this.controlsRoles = this.objRegistro?.listPerfiles;\r\n          // var controlsAsignacionesRoles: any = lstRoles.map(c => new FormControl(false));\r\n          // this.setCheboxes(lstRoles, this.objRegistro?.listPerfiles, controlsAsignacionesRoles);\r\n          \r\n            this.formulario = this.fb.group({\r\n              id: [{ value: this.objRegistro.id},[]],\r\n              login: [{ value: this.objRegistro.login, disabled: true }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n              Nombre: [{ value: this.objRegistro.nombre, disabled: false }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n              apellidoPaterno: [{ value: this.objRegistro.apellidoPaterno, disabled: false }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n              apellidoMaterno: [{ value: this.objRegistro.apellidoMaterno, disabled: false }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\r\n              email: [{ value: this.objRegistro.correo, disabled: false }, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],      \r\n              ListRoles: this.fb.array(controlsAsignacionesRoles,[Validators.required]),\r\n              recibeNotificacion: [{ value: this.objRegistro.recibeNotificacion, disabled: false }, []],      \r\n            });            \r\n            // var IdsRoles = this.objRegistro?.listPerfiles.length > 0 ? this.objRegistro?.listPerfiles.map(x => { return x.id }).join(\"\") : \"\";            \r\n            // this.objRegistro?.listPerfiles.map(x => { return x.Id }).join(\"\")            \r\n            // if (IdsRoles.length > 0)\r\n            // this.setCheboxes(lstRoles, this.objRegistro?.listPerfiles, this.formulario.value.ListRoles);\r\n\r\n            \r\n\r\n\r\n         }else{                \r\n            this.formulario = new FormGroup({      \r\n            id: new FormControl(0),      \r\n            login: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n            Nombre: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n            apellidoPaterno: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n            apellidoMaterno: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]),\r\n            email: new FormControl('', [Validators.required, Validators.pattern(this.RegEx_mailPattern), Validators.minLength(3), Validators.maxLength(100)]),\r\n            ListRoles: new FormArray([], [Validators.required]),\r\n            recibeNotificacion:new FormControl(false,[]),\r\n          });\r\n       }\r\n\r\n\r\n    // this.controlsRoles = [];\r\n\r\n    // this.formulario = this.fb.group({\r\n    //   id: new FormControl(0),      \r\n    //   login: new FormControl('', [Validators.required]),\r\n    //   nombre: new FormControl('', [Validators.required]),\r\n    //   apellidoPaterno: new FormControl('', [Validators.required]),\r\n    //   apellidoMaterno: new FormControl('', [Validators.required]),\r\n    //   email: new FormControl('', [Validators.required, Validators.pattern(this.RegEx_mailPattern)]),\r\n    //   ListRoles: new FormArray(this.controlsRoles, [Validators.required]),\r\n    // });\r\n    // if (this.objRegistro) {\r\n      \r\n    //   var IdsRoles = this.objRegistro?.listPerfiles.length > 0 ? this.objRegistro?.listPerfiles.map(x => { return x.id }).join(\"\") : \"\";\r\n    //   this.objRegistro?.listPerfiles.map(x => { return x.Id }).join(\"\")\r\n      \r\n    //   if (IdsRoles.length > 0)\r\n    //     this.setCheboxes(this.listarRolesDto, IdsRoles, \"ListRoles\");\r\n    //   this.formulario.patchValue({\r\n    //     id: this.objRegistro.id,\r\n    //     login: this.objRegistro.login,\r\n    //     nombre: this.objRegistro.nombre,\r\n    //     apellidoPaterno: this.objRegistro.apellidoPaterno,\r\n    //     apellidoMaterno: this.objRegistro.apellidoMaterno,\r\n    //     email: this.objRegistro.correo,\r\n        \r\n    //   });\r\n      \r\n    // }\r\n  }\r\n  guardar() {\r\n\r\n    if (this.formulario.invalid) {\r\n      this.formulario.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.dialogo.open(DialogoConfirmacionComponent, { maxWidth: '25vw', maxHeight: 'auto', height: 'auto', width: '25%', disableClose: true,\r\n      data: { titulo: `Registro de Usuario`, mensaje: `¿Está seguro que desea grabar?` }\r\n    }).afterClosed().subscribe(async (Ok: Boolean) => {\r\n        if (Ok) {\r\n          let request: any = {\r\n              Id : this.objRegistro ? this.objRegistro.Id : 0,\r\n              login : this.formulario.value.login,\r\n              Nombre : this.formulario.value.Nombre,\r\n              apellidoPaterno : this.formulario.value.apellidoPaterno,\r\n              apellidoMaterno : this.formulario.value.apellidoMaterno,\r\n              email : this.formulario.value.email,          \r\n              recibeNotificacion: this.formulario.value.recibeNotificacion,  \r\n              IdAplicacion :  parseInt(localStorage.getItem(\"App\"))\r\n            };\r\n            console.log(this.formulario.value.ListRoles);   \r\n            if (this.formulario.value.ListRoles !== null) \r\n              request.listPerfiles = this.formulario.value.ListRoles.length > 0 ? this.formulario.value.ListRoles.map(x => { return x.Id }) : [];            \r\n              \r\n            // this.onGuardar.emit(request);\r\n          }\r\n        });\r\n    }\r\n  /*\r\n  minSelectedCheckboxes(min = 1) {\r\n    const validator: ValidatorFn = (formArray: AbstractControl) => {\r\n\r\n      if (formArray instanceof FormArray) {\r\n        const totalSelected = formArray.controls\r\n          .map((control) => control.value)\r\n          .reduce((prev, next) => (next ? prev + next : prev), 0);\r\n        return totalSelected >= min ? null : { required: true };\r\n      }\r\n\r\n      throw new Error('formArray is not an instance of FormArray');\r\n    };\r\n    return validator;\r\n  }*/\r\n  // setCheboxes(listCargados: any, listSeleccionado: String, key: string) {    \r\n  //   const controls = <FormArray>this.formulario.get(key);    \r\n  //   let arraSeleccionado: any[] = listSeleccionado.split(\",\");\r\n    \r\n  //   for (let index = 0; index < arraSeleccionado.length; index++) {\r\n  //     for (let index1 = 0; index1 < listCargados.length; index1++) {\r\n  //       //console.log(listCargados[index1].Id);\r\n  //       if (parseInt(arraSeleccionado[index]) == listCargados[index1].Id) {\r\n  //         listCargados[index1].completed = true;\r\n  //         controls.push(new FormControl({ Id: arraSeleccionado[index] }));\r\n  //         //controls.push(new FormControl({ Id: arraSeleccionado[index] }));\r\n  //         //controls[index1].setValue(true);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n  setCheboxes(listCargados: any, arraSeleccionado: any[], controls: any) {\r\n    \r\n    for (let index = 0; index < arraSeleccionado.length; index++) {\r\n      for (let index1 = 0; index1 < listCargados.length; index1++) {              \r\n        if (parseInt(arraSeleccionado[index].id) == listCargados[index1].Id) {\r\n          listCargados[index1].completed = true;\r\n          // controls[index1].setValue(new FormControl({ Id: arraSeleccionado[index].id, Nombre: arraSeleccionado[index].Nombre }));\r\n           controls[index1].setValue(true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateChkbxArray(chk, isChecked, key) {\r\n\r\n    const chkArray = <FormArray>this.formulario.get(key);\r\n    if (isChecked) {\r\n      //sometimes inserts values already included creating double records for the same values -hence the defence      \r\n      if (chkArray.controls.findIndex(x => x.value == chk.Id) == -1)\r\n        chkArray.push(new FormControl({ Id: chk.Id, Nombre: chk.Nombre }));\r\n    } else {\r\n      let idx = chkArray.controls.findIndex(x => x.value == chk.Id);\r\n      chkArray.removeAt(idx);\r\n    }\r\n  }\r\n}\r\n\r\n","<form autocomplete=\"on\" [formGroup]=\"formulario\" (ngSubmit)=\"guardar()\" *ngIf=\"formulario\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <button mat-raised-button class=\"btn\">Guardar<mat-icon>save</mat-icon></button>\r\n            <a class=\"btn btn-info\" mat-raised-button [routerLink]=\"['/seguridad/bandusuario']\">Cancelar<mat-icon>block</mat-icon></a>\r\n        </div>\r\n    </div>\r\n    <fieldset class=\"form-group border p-3\">\r\n        <legend class=\"w-auto px-2\">DATOS GENERALES</legend>        \r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Nombre</mat-label>\r\n                    <input matInput formControlName=\"Nombre\">\r\n                    <mat-error *ngIf=\"formulario.controls['Nombre'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.controls['Nombre'].hasError('minlength')\">\r\n                        Este campo debe contener 3 caracteres como mínimo\r\n                      </mat-error>                  \r\n                      <mat-error *ngIf=\"formulario.controls['Nombre'].hasError('maxlength')\">\r\n                        Este campo debe contener 50 caracteres como máximo\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Apellido Paterno</mat-label>\r\n                    <input matInput formControlName=\"apellidoPaterno\">\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoPaterno'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoPaterno'].hasError('minlength')\">\r\n                        Este campo debe contener 3 caracteres como mínimo\r\n                      </mat-error>                  \r\n                      <mat-error *ngIf=\"formulario.controls['apellidoPaterno'].hasError('maxlength')\">\r\n                        Este campo debe contener 50 caracteres como máximo\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Apellido Materno</mat-label>\r\n                    <input matInput formControlName=\"apellidoMaterno\">\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoMaterno'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.controls['apellidoMaterno'].hasError('minlength')\">\r\n                        Este campo debe contener 3 caracteres como mínimo\r\n                      </mat-error>                  \r\n                      <mat-error *ngIf=\"formulario.controls['apellidoMaterno'].hasError('maxlength')\">\r\n                        Este campo debe contener 50 caracteres como máximo\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\">\r\n                    <mat-error *ngIf=\"formulario.controls['email'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.get('email').hasError('pattern')\">\r\n                        Email ingresado no es valido\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.controls['email'].hasError('minlength')\">\r\n                        Este campo debe contener 3 caracteres como mínimo\r\n                      </mat-error>                  \r\n                      <mat-error *ngIf=\"formulario.controls['email'].hasError('maxlength')\">\r\n                        Este campo debe contener 100 caracteres como máximo\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Login</mat-label>\r\n                    <input matInput formControlName=\"login\">\r\n                    <mat-error *ngIf=\"formulario.controls['login'].hasError('required')\">\r\n                        Este campo es obligatorio\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"formulario.controls['login'].hasError('minlength')\">\r\n                        Este campo debe contener 3 caracteres como mínimo\r\n                      </mat-error>                  \r\n                      <mat-error *ngIf=\"formulario.controls['login'].hasError('maxlength')\">\r\n                        Este campo debe contener 20 caracteres como máximo\r\n                      </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <mat-checkbox formControlName=\"recibeNotificacion\">Recibir notificacion</mat-checkbox>\r\n            </div>\r\n        </div>        \r\n    </fieldset>\r\n\r\n    <fieldset class=\"form-group border p-3\">\r\n        <legend class=\"w-auto px-2\">ROLES</legend>\r\n        <div class=\"row\">\r\n          \r\n            <div class=\"col-md-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\" *ngFor=\"let group of groupsRoles\">\r\n                        <ul style=\" list-style-type: none;\">\r\n                            <li *ngFor=\"let item of group\" formArrayName=\"ListRoles\">\r\n                                <mat-checkbox color=\"primary\"  [disabled]=\"false\" [checked]=\"item.completed\" \r\n                                 (change)=\"updateChkbxArray(item, $event.checked, 'ListRoles')\" value=\"item.Id\">\r\n                                    {{item.Nombre}}\r\n                                </mat-checkbox>\r\n                            </li>\r\n                        </ul>                       \r\n                    </div>\r\n                    <mat-error *ngIf=\"formulario.controls.ListRoles.invalid\">\r\n                        Por favor seleccione al menos un rol\r\n                    </mat-error>                   \r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}