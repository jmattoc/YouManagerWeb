{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Equipo/source/Tgsc-Proyectos/rrhh-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { initHttpOperation, pollHttpOperation } from \"../../http/operation\";\nimport { logger } from \"../../logger\";\n\nconst createStateProxy = () => ({\n  initState: config => ({\n    config,\n    isStarted: true\n  }),\n  setCanceled: state => state.isCancelled = true,\n  setError: (state, error) => state.error = error,\n  setResult: (state, result) => state.result = result,\n  setRunning: state => state.isStarted = true,\n  setSucceeded: state => state.isCompleted = true,\n  setFailed: () => {\n    /** empty body */\n  },\n  getError: state => state.error,\n  getResult: state => state.result,\n  isCanceled: state => !!state.isCancelled,\n  isFailed: state => !!state.error,\n  isRunning: state => !!state.isStarted,\n  isSucceeded: state => Boolean(state.isCompleted && !state.isCancelled && !state.error)\n});\n\nexport class GenericPollOperation {\n  constructor(state, lro, lroResourceLocationConfig, processResult, updateState, isDone) {\n    this.state = state;\n    this.lro = lro;\n    this.lroResourceLocationConfig = lroResourceLocationConfig;\n    this.processResult = processResult;\n    this.updateState = updateState;\n    this.isDone = isDone;\n  }\n\n  setPollerConfig(pollerConfig) {\n    this.pollerConfig = pollerConfig;\n  }\n\n  update(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const stateProxy = createStateProxy();\n\n      if (!_this.state.isStarted) {\n        _this.state = Object.assign(Object.assign({}, _this.state), yield initHttpOperation({\n          lro: _this.lro,\n          stateProxy,\n          resourceLocationConfig: _this.lroResourceLocationConfig,\n          processResult: _this.processResult\n        }));\n      }\n\n      const updateState = _this.updateState;\n      const isDone = _this.isDone;\n\n      if (!_this.state.isCompleted) {\n        yield pollHttpOperation({\n          lro: _this.lro,\n          state: _this.state,\n          stateProxy,\n          processResult: _this.processResult,\n          updateState: updateState ? (state, {\n            rawResponse\n          }) => updateState(state, rawResponse) : undefined,\n          isDone: isDone ? ({\n            flatResponse\n          }, state) => isDone(flatResponse, state) : undefined,\n          options,\n          setDelay: intervalInMs => {\n            _this.pollerConfig.intervalInMs = intervalInMs;\n          }\n        });\n      }\n\n      (_a = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _a === void 0 ? void 0 : _a.call(options, _this.state);\n      return _this;\n    })();\n  }\n\n  cancel() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n      return _this2;\n    })();\n  }\n  /**\n   * Serializes the Poller operation.\n   */\n\n\n  toString() {\n    return JSON.stringify({\n      state: this.state\n    });\n  }\n\n} //# sourceMappingURL=operation.js.map","map":{"version":3,"sources":["C:/Users/Equipo/source/Tgsc-Proyectos/rrhh-web/node_modules/@azure/core-lro/dist-esm/src/legacy/lroEngine/operation.js"],"names":["initHttpOperation","pollHttpOperation","logger","createStateProxy","initState","config","isStarted","setCanceled","state","isCancelled","setError","error","setResult","result","setRunning","setSucceeded","isCompleted","setFailed","getError","getResult","isCanceled","isFailed","isRunning","isSucceeded","Boolean","GenericPollOperation","constructor","lro","lroResourceLocationConfig","processResult","updateState","isDone","setPollerConfig","pollerConfig","update","options","_a","stateProxy","Object","assign","resourceLocationConfig","rawResponse","undefined","flatResponse","setDelay","intervalInMs","fireProgress","call","cancel","toString","JSON","stringify"],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { initHttpOperation, pollHttpOperation } from \"../../http/operation\";\nimport { logger } from \"../../logger\";\nconst createStateProxy = () => ({\n    initState: (config) => ({ config, isStarted: true }),\n    setCanceled: (state) => (state.isCancelled = true),\n    setError: (state, error) => (state.error = error),\n    setResult: (state, result) => (state.result = result),\n    setRunning: (state) => (state.isStarted = true),\n    setSucceeded: (state) => (state.isCompleted = true),\n    setFailed: () => {\n        /** empty body */\n    },\n    getError: (state) => state.error,\n    getResult: (state) => state.result,\n    isCanceled: (state) => !!state.isCancelled,\n    isFailed: (state) => !!state.error,\n    isRunning: (state) => !!state.isStarted,\n    isSucceeded: (state) => Boolean(state.isCompleted && !state.isCancelled && !state.error),\n});\nexport class GenericPollOperation {\n    constructor(state, lro, lroResourceLocationConfig, processResult, updateState, isDone) {\n        this.state = state;\n        this.lro = lro;\n        this.lroResourceLocationConfig = lroResourceLocationConfig;\n        this.processResult = processResult;\n        this.updateState = updateState;\n        this.isDone = isDone;\n    }\n    setPollerConfig(pollerConfig) {\n        this.pollerConfig = pollerConfig;\n    }\n    async update(options) {\n        var _a;\n        const stateProxy = createStateProxy();\n        if (!this.state.isStarted) {\n            this.state = Object.assign(Object.assign({}, this.state), (await initHttpOperation({\n                lro: this.lro,\n                stateProxy,\n                resourceLocationConfig: this.lroResourceLocationConfig,\n                processResult: this.processResult,\n            })));\n        }\n        const updateState = this.updateState;\n        const isDone = this.isDone;\n        if (!this.state.isCompleted) {\n            await pollHttpOperation({\n                lro: this.lro,\n                state: this.state,\n                stateProxy,\n                processResult: this.processResult,\n                updateState: updateState\n                    ? (state, { rawResponse }) => updateState(state, rawResponse)\n                    : undefined,\n                isDone: isDone\n                    ? ({ flatResponse }, state) => isDone(flatResponse, state)\n                    : undefined,\n                options,\n                setDelay: (intervalInMs) => {\n                    this.pollerConfig.intervalInMs = intervalInMs;\n                },\n            });\n        }\n        (_a = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _a === void 0 ? void 0 : _a.call(options, this.state);\n        return this;\n    }\n    async cancel() {\n        logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n        return this;\n    }\n    /**\n     * Serializes the Poller operation.\n     */\n    toString() {\n        return JSON.stringify({\n            state: this.state,\n        });\n    }\n}\n//# sourceMappingURL=operation.js.map"]},"metadata":{},"sourceType":"module"}