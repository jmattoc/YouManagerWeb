{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Equipo/source/Tgsc-Proyectos/youManager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl } from '@angular/forms';\nimport { DialogConfirmarperiodoComponent } from '@shared/components/dialog-confirmarperiodo/dialog-confirmarperiodo.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@modules/contra/services/contra.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@core/auth/auth.service\";\nimport * as i7 from \"@shared/services/bootstrap-notify.service\";\nimport * as i8 from \"./../services/reco.service\";\nimport * as i9 from \"xng-breadcrumb\";\nimport * as i10 from \"@angular/material/expansion\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/form-field\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"@angular/material/datepicker\";\nimport * as i17 from \"@angular/material/select\";\nimport * as i18 from \"@angular/material/core\";\n\nfunction NewperiodoComponent_form_25_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Es necesario completar el nombre del nuevo periodo! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewperiodoComponent_form_25_div_19_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const estado_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", estado_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", estado_r6.viewValue, \" \");\n  }\n}\n\nfunction NewperiodoComponent_form_25_div_19_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Seleccione el estado! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewperiodoComponent_form_25_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 23);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function NewperiodoComponent_form_25_div_19_Template_mat_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.estadointtxt = $event;\n    })(\"selectionChange\", function NewperiodoComponent_form_25_div_19_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.chaneestadoperiodo($event);\n    });\n    i0.ɵɵtemplate(5, NewperiodoComponent_form_25_div_19_mat_option_5_Template, 2, 2, \"mat-option\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NewperiodoComponent_form_25_div_19_mat_error_6_Template, 2, 0, \"mat-error\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_2_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.estadointtxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.estadocategoria);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r2.formularionewcategoria.get(\"stmaneestado\")) == null ? null : tmp_2_0.hasError(\"required\"));\n  }\n}\n\nfunction NewperiodoComponent_form_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 15);\n    i0.ɵɵlistener(\"ngSubmit\", function NewperiodoComponent_form_25_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.guardarperiodo();\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 16);\n    i0.ɵɵelementStart(3, \"button\", 17);\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"block\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" Cancelar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 18);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"fieldset\", 19);\n    i0.ɵɵelementStart(10, \"legend\", 20);\n    i0.ɵɵtext(11, \"DATOS GENERALES\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 21);\n    i0.ɵɵelementStart(13, \"div\", 22);\n    i0.ɵɵelementStart(14, \"mat-form-field\", 23);\n    i0.ɵɵelementStart(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Nuevo periodo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function NewperiodoComponent_form_25_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.newperiodotxt = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, NewperiodoComponent_form_25_mat_error_18_Template, 2, 0, \"mat-error\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, NewperiodoComponent_form_25_div_19_Template, 7, 3, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 21);\n    i0.ɵɵelementStart(21, \"div\", 22);\n    i0.ɵɵelementStart(22, \"mat-form-field\", 23);\n    i0.ɵɵelementStart(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Fecha inicio y Fecha Fin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"mat-date-range-input\", 27);\n    i0.ɵɵelementStart(26, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function NewperiodoComponent_form_25_Template_input_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.fechainicio = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function NewperiodoComponent_form_25_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.fechafin = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"mat-datepicker-toggle\", 30);\n    i0.ɵɵelement(29, \"mat-date-range-picker\", null, 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(30);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formularionewcategoria);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.btnguar, \" \");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newperiodotxt)(\"formControl\", ctx_r0.stamaneperiodo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r0.stamaneperiodo.get(\"stamaneperiodo\")) == null ? null : tmp_4_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showestado);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"rangePicker\", _r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.fechainicio);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.fechafin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r3);\n  }\n}\n\n;\nexport class NewperiodoComponent {\n  constructor(contratoService, router, dialog, dialogo, snackBar, _formBuilder, fb, as, activatedRoute, bootstrapNotifyBarService, recoservice) {\n    this.contratoService = contratoService;\n    this.router = router;\n    this.dialog = dialog;\n    this.dialogo = dialogo;\n    this.snackBar = snackBar;\n    this._formBuilder = _formBuilder;\n    this.fb = fb;\n    this.as = as;\n    this.activatedRoute = activatedRoute;\n    this.bootstrapNotifyBarService = bootstrapNotifyBarService;\n    this.recoservice = recoservice;\n    this.matexpansionpanelfiltro = false;\n    this.titulo = 'NUEVO PERIODO';\n    this.subtitulo = 'Crear periodo';\n    this.isedit = false;\n    this.btnguar = 'Guardar';\n    this.showregiscateg = true;\n    this.fechainicio = '2021-11-13T00:00:00.342Z';\n    this.fechafin = new Date();\n    this.newperiodotxt = '';\n    this.stamaneperiodo = new FormControl('');\n    this.fxInicio = new FormControl('');\n    this.fxFin = new FormControl('');\n    this.stmaneestado = new FormControl('');\n    this.estadointtxt = '';\n    this.showestado = false;\n    this.idperiodo = 0;\n    this.idultimoperiodo = '';\n    this.ultimonombreperiodo = '';\n    this.estadocategoria = [{\n      value: true,\n      viewValue: 'ACTIVO'\n    }, {\n      value: false,\n      viewValue: 'INACTIVO'\n    }];\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.obtenerdatos(id);\n      this.isedit = true;\n      this.titulo = 'EDITAR PERIDO';\n      this.subtitulo = 'Editar Periodo';\n      this.btnguar = 'Guardar';\n    }\n  }\n\n  ngOnInit() {\n    // console.log('Id y nombreperiodo',this.idultimoperiodo, this.idperiodo);\n    this.formularionewcategoria = this.fb.group({\n      stamaneperiodo: this.stamaneperiodo,\n      stmaneestado: this.stmaneestado,\n      fkMdEstadoContratacion: [],\n      fkProyecto: [],\n      fxInicio: [],\n      fxFin: []\n    });\n  }\n\n  chaneestadoperiodo(e) {}\n\n  obtenerdatos(id) {\n    this.recoservice.geteditarperiodo(id).subscribe(res => {\n      //this.showestado = true;\n      // console.log('aaa', res);\n      this.newperiodotxt = res.nombre;\n      this.estadointtxt = res.activo;\n      this.fechainicio = res.fechaInicio;\n      this.fechafin = res.fechaFin;\n      this.idperiodo = res.id;\n    });\n  }\n\n  OpenPoupinicio() {\n    {\n      this.dialogo.open(DialogConfirmarperiodoComponent, {\n        maxWidth: '150vw',\n        maxHeight: 'auto',\n        height: 'auto',\n        width: '25%',\n        disableClose: true,\n        data: {\n          titulo: `Acitvos`\n        }\n      }).afterClosed().subscribe(result => {//console.log(result);\n      });\n    }\n  }\n\n  guardarperiodo() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.formularionewcategoria.invalid) {\n        _this.formularionewcategoria.markAllAsTouched();\n\n        return;\n      }\n\n      if (_this.isedit) {\n        var dataedit = {\n          id: _this.idperiodo,\n          nombre: _this.newperiodotxt,\n          fechaInicio: _this.fechainicio,\n          fechaFin: _this.fechafin,\n          activo: _this.estadointtxt\n        }; // console.log('DataEdit', dataedit);\n\n        _this.recoservice.putactualizarperiodo(dataedit).subscribe(res => {\n          _this.bootstrapNotifyBarService.notifyWarning('El periodo se actualizo correctamente.');\n\n          _this.router.navigate([\"/configuracion/periodo\"]);\n        });\n      } else {\n        var data = {\n          nombre: _this.newperiodotxt,\n          fechaInicio: _this.fechainicio,\n          fechaFin: _this.fechafin\n        }; // console.log('datos-para-registrar', data);\n\n        _this.recoservice.postregistrarperiodo(data).subscribe(res => {\n          _this.bootstrapNotifyBarService.notifySuccess('Se creo el periodo correctamente.');\n\n          _this.router.navigate([\"/configuracion/periodo\"]);\n        });\n      }\n    })();\n  }\n\n}\n\nNewperiodoComponent.ɵfac = function NewperiodoComponent_Factory(t) {\n  return new (t || NewperiodoComponent)(i0.ɵɵdirectiveInject(i1.ContraService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i7.BootstrapNotifyBarService), i0.ɵɵdirectiveInject(i8.recoservice));\n};\n\nNewperiodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewperiodoComponent,\n  selectors: [[\"app-newperiodo\"]],\n  inputs: {\n    idultimoperiodo: \"idultimoperiodo\",\n    ultimonombreperiodo: \"ultimonombreperiodo\"\n  },\n  decls: 26,\n  vars: 4,\n  consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"form-group\", \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-rose\", \"card-header-icon\"], [1, \"row\"], [1, \"col-md-9\"], [1, \"card-icon\"], [1, \"material-icons\"], [1, \"card-title\"], [1, \"card-body\"], [\"multi\", \"\", 1, \"example-headers-align\"], [3, \"expanded\"], [\"autocomplete\", \"on\", \"class\", \"form-horizontal w-100 p-md-4 p-4\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"autocomplete\", \"on\", 1, \"form-horizontal\", \"w-100\", \"p-md-4\", \"p-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/configuracion/periodo\", 1, \"btn\", \"btn-info\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\"], [1, \"form-group\", \"p-3\"], [1, \"w-auto\", \"px-2\"], [1, \"row\", \"mt-3\"], [1, \"col-md-10\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"stamaneperiodo\", \"required\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [4, \"ngIf\"], [\"class\", \"col-md-2\", 4, \"ngIf\"], [3, \"rangePicker\"], [\"matStartDate\", \"\", \"placeholder\", \"Fecha inicio\", \"formControlName\", \"fxInicio\", 3, \"ngModel\", \"ngModelChange\"], [\"matEndDate\", \"\", \"placeholder\", \"Fecha fin\", \"formControlName\", \"fxFin\", 3, \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"pickerR\", \"\"], [1, \"col-md-2\"], [\"formControlName\", \"stmaneestado\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function NewperiodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"xng-breadcrumb\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵelementStart(12, \"i\", 9);\n      i0.ɵɵtext(13, \"mobile_friendly\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"h4\", 10);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 11);\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵelementStart(18, \"div\", 3);\n      i0.ɵɵelementStart(19, \"mat-accordion\", 12);\n      i0.ɵɵelementStart(20, \"mat-expansion-panel\", 13);\n      i0.ɵɵelementStart(21, \"mat-expansion-panel-header\");\n      i0.ɵɵelementStart(22, \"mat-panel-title\");\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"mat-panel-description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, NewperiodoComponent_form_25_Template, 31, 10, \"form\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵtextInterpolate1(\" \", ctx.titulo, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"expanded\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.subtitulo, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showregiscateg);\n    }\n  },\n  directives: [i9.BreadcrumbComponent, i10.MatAccordion, i10.MatExpansionPanel, i10.MatExpansionPanelHeader, i10.MatExpansionPanelTitle, i10.MatExpansionPanelDescription, i11.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i12.MatButton, i2.RouterLink, i13.MatIcon, i14.MatFormField, i14.MatLabel, i15.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.RequiredValidator, i5.FormControlDirective, i16.MatDateRangeInput, i16.MatStartDate, i16.MatEndDate, i16.MatDatepickerToggle, i14.MatSuffix, i16.MatDateRangePicker, i14.MatError, i17.MatSelect, i11.NgForOf, i18.MatOption],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\reco\\pages\\newperiodo\\newperiodo.component.ts","C:\\Users\\Equipo\\source\\Tgsc-Proyectos\\youManager-web\\src\\app\\modules\\reco\\pages\\newperiodo\\newperiodo.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { ContraService } from '@modules/contra/services/contra.service';\r\nimport { DialogConfirmarperiodoComponent } from '@shared/components/dialog-confirmarperiodo/dialog-confirmarperiodo.component';\r\nimport { BootstrapNotifyBarService } from '@shared/services/bootstrap-notify.service';\r\nimport { recoservice } from './../services/reco.service';\r\n\r\ninterface Foodestado {\r\n  value: boolean;\r\n  viewValue: string;\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-newperiodo',\r\n  templateUrl: './newperiodo.component.html',\r\n  styleUrls: []\r\n})\r\nexport class NewperiodoComponent implements OnInit {\r\n\r\n  matexpansionpanelfiltro: boolean = false;\r\n  formularionewcategoria!: FormGroup;\r\n\r\n  public titulo: string = 'NUEVO PERIODO';\r\n  public subtitulo: string = 'Crear periodo';\r\n  public isedit: boolean = false;\r\n  public btnguar: string = 'Guardar';\r\n  public showregiscateg: boolean = true;\r\n  public fechainicio: string = '2021-11-13T00:00:00.342Z';\r\n  public fechafin: Date = new Date();\r\n  public newperiodotxt: string = '';\r\n  stamaneperiodo = new FormControl('');\r\n  fxInicio = new FormControl('');\r\n  fxFin = new FormControl('');\r\n  stmaneestado = new FormControl('');\r\n  estadointtxt: string='';\r\n  public showestado: boolean = false;\r\n  idperiodo: number = 0;\r\n  @Input() idultimoperiodo: string='';\r\n  @Input() ultimonombreperiodo: string = '';\r\n\r\n\r\n  constructor(\r\n    private contratoService: ContraService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public dialogo: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private _formBuilder: FormBuilder,\r\n    private fb: FormBuilder,\r\n    public as: AuthService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private bootstrapNotifyBarService: BootstrapNotifyBarService,\r\n    private recoservice: recoservice,\r\n  ) {\r\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    if(id !=null){\r\n      this.obtenerdatos(id);\r\n      this.isedit = true;\r\n      this.titulo ='EDITAR PERIDO';\r\n      this.subtitulo ='Editar Periodo';\r\n      this.btnguar ='Guardar';\r\n    }\r\n  }\r\n\r\n  estadocategoria: Foodestado[] = [\r\n    {value: true, viewValue: 'ACTIVO'},\r\n    {value: false, viewValue: 'INACTIVO'},\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n   // console.log('Id y nombreperiodo',this.idultimoperiodo, this.idperiodo);\r\n    this.formularionewcategoria = this.fb.group({\r\n      stamaneperiodo: this.stamaneperiodo,\r\n      stmaneestado: this.stmaneestado,\r\n      fkMdEstadoContratacion: [],\r\n      fkProyecto: [],\r\n      fxInicio: [],\r\n      fxFin: [],\r\n    });\r\n\r\n\r\n  }\r\n\r\n  chaneestadoperiodo(e: any){\r\n\r\n  }\r\n\r\n  obtenerdatos(id){\r\n   this.recoservice.geteditarperiodo(id).subscribe((res: any) => {\r\n    //this.showestado = true;\r\n   // console.log('aaa', res);\r\n    this.newperiodotxt = res.nombre;\r\n    this.estadointtxt = res.activo;\r\n    this.fechainicio = res.fechaInicio;\r\n    this.fechafin = res.fechaFin;\r\n    this.idperiodo = res.id;\r\n\r\n\r\n    });\r\n  }\r\n  OpenPoupinicio(){\r\n    {\r\n      this.dialogo.open(DialogConfirmarperiodoComponent, {\r\n        maxWidth: '150vw',\r\n        maxHeight: 'auto',\r\n        height: 'auto',\r\n        width: '25%',\r\n        disableClose: true,\r\n        data: {\r\n          titulo: `Acitvos`,\r\n        }\r\n      })\r\n      .afterClosed().subscribe(result => {\r\n        //console.log(result);\r\n\r\n      });\r\n\r\n      }\r\n  }\r\n\r\n\r\n  async guardarperiodo(){\r\n    if (this.formularionewcategoria.invalid) {\r\n      this.formularionewcategoria.markAllAsTouched();\r\n      return;\r\n    }\r\n    if(this.isedit){\r\n      var dataedit = {\r\n        id:this.idperiodo,\r\n        nombre: this.newperiodotxt,\r\n        fechaInicio: this.fechainicio,\r\n        fechaFin: this.fechafin,\r\n        activo: this.estadointtxt,\r\n      }\r\n     // console.log('DataEdit', dataedit);\r\n      this.recoservice.putactualizarperiodo(dataedit).subscribe((res:  any) =>{\r\n        this.bootstrapNotifyBarService.notifyWarning('El periodo se actualizo correctamente.');\r\n        this.router.navigate([\"/configuracion/periodo\"]);\r\n      });\r\n    }else{\r\n      var data = {\r\n        nombre: this.newperiodotxt,\r\n        fechaInicio: this.fechainicio,\r\n        fechaFin: this.fechafin,\r\n      }\r\n     // console.log('datos-para-registrar', data);\r\n      this.recoservice.postregistrarperiodo(data).subscribe((res:  any) =>{\r\n        this.bootstrapNotifyBarService.notifySuccess('Se creo el periodo correctamente.');\r\n        this.router.navigate([\"/configuracion/periodo\"]);\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-12\">\r\n        <xng-breadcrumb></xng-breadcrumb>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-rose card-header-icon\">\r\n            <div class=\"row\">\r\n            <div class=\"col-md-9\">\r\n              <div class=\"card-icon\"><i class=\"material-icons\">mobile_friendly</i></div>\r\n               <h4 class=\"card-title\">\r\n                {{titulo}}\r\n              </h4>\r\n             </div>\r\n           </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <mat-accordion class=\"example-headers-align\" multi>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        {{ subtitulo }}\r\n                      </mat-panel-title>\r\n                      <mat-panel-description>\r\n                      </mat-panel-description>\r\n                    </mat-expansion-panel-header>\r\n                    <form autocomplete=\"on\" [formGroup]=\"formularionewcategoria\" *ngIf=\"showregiscateg\" class=\"form-horizontal w-100 p-md-4 p-4\" (ngSubmit)=\"guardarperiodo()\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <button mat-raised-button class=\"btn btn-info\"  routerLink=\"/configuracion/periodo\">\r\n                            <mat-icon>block</mat-icon>\r\n                            Cancelar\r\n                          </button>\r\n                          <button mat-raised-button class=\"btn btn-primary\">\r\n                            {{btnguar}}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <fieldset class=\"form-group p-3\">\r\n                        <legend class=\"w-auto px-2\">DATOS GENERALES</legend>\r\n                        <div class=\"row mt-3\">\r\n                          <div class=\"col-md-10\">\r\n                          <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Nuevo periodo</mat-label>\r\n                            <input matInput [(ngModel)]=\"newperiodotxt\"\r\n                            formControlName=\"stamaneperiodo\" [formControl]=\"stamaneperiodo\" required>\r\n                            <mat-error *ngIf=\"stamaneperiodo.get('stamaneperiodo')?.hasError('required')\">\r\n                              Es necesario completar el nombre del nuevo periodo!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2\" *ngIf=\"showestado\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                              <mat-label>Estado</mat-label>\r\n                              <mat-select formControlName=\"stmaneestado\"  required [(ngModel)]=\"estadointtxt\" (selectionChange)=\"chaneestadoperiodo($event)\">\r\n                               <!-- <mat-option *ngFor=\"let estado of lstEstadonewcatgoria\" [value]=\"estado.idMaestroDetalle\">\r\n                                  {{estado.stNombre}}\r\n                                </mat-option>-->\r\n                                <mat-option *ngFor=\"let estado of estadocategoria\" [value]=\"estado.value\" >\r\n                                  {{estado.viewValue}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"formularionewcategoria.get('stmaneestado')?.hasError('required')\">\r\n                                Seleccione el estado!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3\">\r\n                        <div class=\"col-md-10\">\r\n                          <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Fecha inicio y Fecha Fin</mat-label>\r\n                            <mat-date-range-input [rangePicker]=\"pickerR\">\r\n                              <input matStartDate placeholder=\"Fecha inicio\" formControlName=\"fxInicio\" [(ngModel)]=\"fechainicio\">\r\n                              <input matEndDate placeholder=\"Fecha fin\" formControlName=\"fxFin\" [(ngModel)]=\"fechafin\">\r\n                            </mat-date-range-input>\r\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerR\"></mat-datepicker-toggle>\r\n                            <mat-date-range-picker #pickerR></mat-date-range-picker>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        </div>\r\n                      </fieldset>\r\n                    </form>\r\n                  </mat-expansion-panel>\r\n                </mat-accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}